@page "/"

@using BlazorApp.Data
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment env


<DxPager PageCount="@PageCount"
         ActivePageIndex="@ActivePageIndex"
         ActivePageIndexChanged="@((value) => ActivePageIndexChanged(value))">
</DxPager>

    @if(HomesDS != null) {
        int start = ActivePageIndex * PageSize;
        int end = ((start + PageSize) > HomesDS.Count) ? HomesDS.Count : (start + PageSize);
<DxGridLayout CssClass="mw-1100" ColumnSpacing="5px" RowSpacing="5px">
    <Rows>
        <DxGridLayoutRow Height="auto" />
        <DxGridLayoutRow Height="auto" />
        <DxGridLayoutRow Height="auto" />
    </Rows>
    <Columns>
        <DxGridLayoutColumn />
        <DxGridLayoutColumn />
        <DxGridLayoutColumn />
    </Columns>
    <Items>
        @for(int i = start; i < end; i++) {
            Homes home = HomesDS[i];
            int currentIndex = i % PageSize;
<DxGridLayoutItem Row="(int)(currentIndex / 3)" Column="currentIndex % 3" CssClass="border border-primary">
    <Template>
        <DxFormLayout>
            <DxFormLayoutItem ColSpanMd="12" ColSpanLg="3">
                <Template>
                    <div class="text-center">
                        <img src="Images/@home.PhotoUrl" class="m-auto w-75" />
                    </div>
                </Template>
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanMd="12" ColSpanLg="9">
                <Template>
                    <h3>@home.Address</h3>
                    <p>
                        ID: @home.ID / Beds: @home.Beds / Baths: @home.Baths / Size: @home.HouseSize / Year: @home.YearBuilt
                    </p>
                    <div class="text-muted">
                        @home.Features.Substring(0, 200)
                        <a href="#" class="target-container" @onclick="@(() => ShowDetails(home.Features))">...More details</a>
                    </div>
                </Template>
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanMd="12">
                <Template>
                    <h5 class="float-right">@string.Format("{0:C}", home.Price)</h5>
                </Template>
            </DxFormLayoutItem>
        </DxFormLayout>
    </Template>
</DxGridLayoutItem>}
    </Items>
</DxGridLayout>}


    <DxPopup HeaderText="Details" @bind-Visible="@PopupVisible">
        <Content>
            @Details
        </Content>
    </DxPopup>

    @code{ List<Homes> HomesDS;
        int PageCount = 0;
        int PageSize = 9;
        int ActivePageIndex = 0;
        bool PopupVisible = false;
        string Details;

        protected override void OnInitialized() {
            HomesProvider provider = new HomesProvider(env);
            HomesDS = provider.GetDataFormXml();
            int homesCount = HomesDS.Count;
            PageCount = (homesCount / PageSize) + 1;
            base.OnInitialized();
        }
        void ActivePageIndexChanged(int value) {
            ActivePageIndex = value;
            InvokeAsync(StateHasChanged);
        }
        void ShowDetails(string details) {
            PopupVisible = true;
            Details = details;
            StateHasChanged();
        } }
